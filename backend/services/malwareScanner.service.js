const ClamScan = require('clamscan');
const stream = require('stream');

exports.scanFileBuffer = async (fileBuffer) => {
  try {
    // 1. Initialize the ClamAV scanner
    const clamscan = await new ClamScan().init({
      clamdscan: {
        host: '127.0.0.1', // Ensure your Docker container is accessible
        port: 3310,
        bypass_test: true, // Don't block the stream from reading
        timeout: 120000,   // Set a timeout for the scan
      },
      preference: 'clamdscan' // Use the daemon for scanning
    });
    
    // Create a readable stream from the file buffer
    const bufferStream = stream.Readable.from(fileBuffer);

    // 2. Scan the stream
    const result = await clamscan.scanStream(bufferStream);

    // 3. Check the result
    if (result.is_infected) {
      console.log(`Threat Detected: ${result.viruses.join(', ')}`);
      return { isSafe: false, viruses: result.viruses };
    } else {
      console.log('Scan complete: No threats found.');
      return { isSafe: true };
    }
  } catch (error) {
    console.error("ClamAV scan process error:", error);
    throw new Error("Failed to scan the file due to a scanner service error.");
  }
};